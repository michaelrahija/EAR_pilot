# REMOVE DUPLICATES
d <- unique(d)
#clean column names
colnames(d) <- gsub("[^a-zA-Z0-9]","",colnames(d))
#randomly sample some rows:
# set.seed(1)
# samp <- sample(1:nrow(master),100)
# d <- d[samp,]
#####################
## clean addresses ##
#####################
#replace addresses on "Roma" with NA
test.i <- d$indirizzo == "Roma"
d$indirizzo[test.i] <- "NA"
####################
## create CAP     ##
####################
d$cap <- gsub(".*, ","",d$indirizzo)
d$cap <- gsub("-.*","",d$cap)
test.cap <- grepl("[0-9]{5}",d$cap)
d$cap[!test.cap] <- "NA"
##############################
##    ZONA                  ##
## *FIND WAY TO SOLVE NA    ##
##############################
blank <- d$zona == ""
d$zona[blank] = "NA"
# tab <-  d %>% group_by(zona) %>% summarize(num=length(indirizzo))
# tab$share = tab$num/nrow(d)
# tab$share <- round(tab$share, digits = 3)
# tab
############################
##      CLEAN PRICE       ##
############################
d$prezzo  <- gsub("^[€]","",d$prezzo)
d$prezzo <- gsub("[€] .*","",d$prezzo)
d$prezzo <- gsub("^ ","",d$prezzo)
d$prezzo <- gsub(" $","",d$prezzo)
d$prezzo <- gsub("[^a-zA-Z0-9]","",d$prezzo)
#change price withheld to NA
d$prezzo <- as.numeric(d$prezzo)
#explore a bit Imb Casa_vendita
library(data.table)
library(dplyr)
library(rvest)
library(romeHousePrices)
if(Sys.info()[4] == "JOSH_LAPTOP"){
workingDir = "~/GitHub/romeHousePrices"
savingDir = "~/../Dropbox/romeHouseData/"
} else if(Sys.info()[4] == "joshuaUbuntuLinux"){
workingDir = "~/Documents/Github/romeHousePrices"
} else if(Sys.info()[4] =="Michaels-MacBook-Pro-2.local"||
Sys.info()[4] == "Michaels-MBP-2.lan"){
workingDir = "~/Dropbox/romeHousePrices/"
savingDir = "~/DropBox/romeHouseData/" #for michael's mac yo
} else {
stop("No directory for current user!")
}
dataFiles = list.files(savingDir, pattern = ".Rdta")
mioFiles = dataFiles[grepl("^Vend_Casa", dataFiles)]
load(paste0(savingDir,mioFiles))
d <- as.data.frame(master)
#########################
##   GENERAL CLEANING  ##
#########################
# REMOVE DUPLICATES
d <- unique(d)
#clean column names
colnames(d) <- gsub("[^a-zA-Z0-9]","",colnames(d))
#randomly sample some rows:
# set.seed(1)
# samp <- sample(1:nrow(master),100)
# d <- d[samp,]
#####################
## clean addresses ##
#####################
#replace addresses on "Roma" with NA
test.i <- d$indirizzo == "Roma"
d$indirizzo[test.i] <- "NA"
####################
## create CAP     ##
####################
d$cap <- gsub(".*, ","",d$indirizzo)
d$cap <- gsub("-.*","",d$cap)
test.cap <- grepl("[0-9]{5}",d$cap)
d$cap[!test.cap] <- "NA"
##############################
##    ZONA                  ##
## *FIND WAY TO SOLVE NA    ##
##############################
blank <- d$zona == ""
d$zona[blank] = "NA"
# tab <-  d %>% group_by(zona) %>% summarize(num=length(indirizzo))
# tab$share = tab$num/nrow(d)
# tab$share <- round(tab$share, digits = 3)
# tab
############################
##      CLEAN PRICE       ##
############################
d$prezzo  <- gsub("^[€]","",d$prezzo)
d$prezzo <- gsub("[€] .*","",d$prezzo)
d$prezzo <- gsub("^ ","",d$prezzo)
d$prezzo <- gsub(" $","",d$prezzo)
d$prezzo <- gsub("[^a-zA-Z0-9]","",d$prezzo)
#change price withheld to NA
d$prezzo <- as.numeric(d$prezzo)
colnames(d)
tab <- d %>% group_by(Locali) %>% summarize(n())
tab
data.frame(tab)
source('~/Dropbox/ad_hoc_R/regression models/Quiz1.R')
.4(1.5)
.4*(1.5)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
mean <- mean(x)
sd <- sd(x)
(x - mean)/sd
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(x~y)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
meanx(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
lm(x~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
num <- sum(x*y)
denom <- sum(x^2)
num/denom
library(datasets)
df <- data(mtcars)
lm(mpg ~ wt, data = mtcars)
.4*(1.5)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
mean <- mean(x)
sd <- sd(x)
(x - mean)/sd
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
lm(x~x)
summary(cars)
data(diamond)
library(ggplot2)
data(diamond)
library(datasets)
data("diamonds")
head(ddiamonds)
head(diamonds)
y <- diamonds$price
x <- diamonds$carat
residuals(lm(y~x))
sum(residuals(lm(y~x)))
res <- residuals(lm(y~x))
mod <- lm(y~x)
mod
yhat <- predict(mod)
res == (yhat - y)
yhat <- predict(mod)
sum(resid(mod) == y - yhat)
install.packages("dict")
install.packages("installr") # install
setInternet2(TRUE)
installr::updateR() # updating R.
names = c("Michael Austin Rahija","Lucia Rita Latino")
gsub(pattern = "[Aa-zZ]+ \s", "", names)
gsub(pattern = "[Aa-zZ]+ ", "", names)
gsub(pattern = "[Aa-zZ]+ \s", "", names)
gsub(pattern = "[Aa-zZ]+ \\s", "", names)
gsub(pattern = "[Aa-Zz]+ \s", "", names)
gsub(pattern = "[Aa-Zz]+ \\s", "", names)
gsub(pattern = "[Aa-Zz]+ ", "", names)
gsub(pattern = "[aA-Zz]+ ", "", names)
gsub(pattern = "[aA-Zz]+  ", "", names)
gsub(pattern = "[aA-Zz]+\s  ", "", names)
gsub(pattern = "^[aA-Zz]+ ", "", names)
gsub(pattern = "^[aA-Zz]+ \\s", "", names)
class(names)
gsub(pattern = "^[Aa-Zz]+ \\s", "", names)
gsub(pattern = "^[Aa-Zz]+\\s", "", names)
gsub(pattern = "^[A-Za-z]+\\s", "", names)
gsub(pattern = "\s  [A-Za-z]+", names)
gsub(pattern = "\\s  [A-Za-z]+", names)
gsub(pattern = "\\s  [A-Za-z]+","", names)
gsub(pattern = "\s  [A-Za-z]+", names)
names = gsub(pattern = "^[A-Za-z]+\\s", "", names)
names
gsub(pattern = "\s  [A-Za-z]+", names)
gsub(pattern = "  [A-Za-z]+", names)
gsub(pattern = "  [A-Za-z]+", "",names)
gsub(pattern = "//s [A-Za-z]+", "",names)
gsub(pattern = "//s[A-Za-z]+", "",names)
gsub(pattern = "\\s[A-Za-z]+", "",names)
---
title: "Sample EAR Database for entry into FTN"
author: "Michael Rahija"
date: "October 2015"
output: html_document
---
```{r include=FALSE, cache=FALSE}
library(DT)
library(dplyr)
library(xlsx)
library(tidyr)
library(ggplot2)
library(RColorBrewer)
library(data.table)
library(maps)
library(countrycode)
library(scales)
sys <- Sys.info()
if(sys[7] == "josh"){
dir = "~/Documents/Github/EAR_pilot/"
} else if(sys[5] == "x86_64"){
dir = "~/Dropbox/FAO_ESS_STUFF/EAR_pilot" #Mac
data.dir = "~/Dropbox/FAO_ESS_STUFF/EAR_pilot_data/"
} else if (sys[5] == "Michael"){
dir = "C:/Users/Michael/Dropbox/FAO_ESS_STUFF/EAR_pilot"#HOME PC
data.dir = "C:/Users/Michael/Dropbox/FAO_ESS_STUFF/EAR_pilot_data/"
} else if (sys[6]=="Rahija") {
dir = "C:/Users/rahija/Dropbox/FAO_ESS_STUFF/EAR_pilot" #FAO PC
data.dir = "C:/Users/rahija/Dropbox/FAO_ESS_STUFF/EAR_pilot_data/"
} else {
stop("Implement location for current user!")
}
setwd(dir)
data <- read.csv(paste0(data.dir,"relevant_variables2.csv"), stringsAsFactors = FALSE)
data <- read.csv(paste0(data.dir,"relevant_variables2.csv"), stringsAsFactors = FALSE)
## Clean data set, and filter for operationnaly active
source("R/cleanAndFilterFPMIS.R")
data.o <- cleanAndFilterFPMIS(data, ActiveOnly = FALSE)
##clean up project titles
data.o$ProjectTitle <- gsub("Ž","é", data.o$ProjectTitle)
data.o$ProjectTitle <- gsub("ci—n","ción", data.o$ProjectTitle)
data.o$ProjectTitle <- gsub("mise en .*uvre ","mise en ouvre ", data.o$ProjectTitle)
## Add staff column
data.o$staff <- paste(data.o$ProjectStaffBudgetHolder,
data.o$ProjectStaffLTOOfficer,
data.o$ProjectStaffLTUOfficer,
data.o$ProjectStaffProgrammeAssistance)
data.o <- filter(data.o, ProjectStatus == "Operationally Active" &
ProjectClassification == "Assistance to Member Countries")
source("R/addTeam.R")
data.o <- addTeam(data.o)
data.t <- select(data.o, ProjectTitle,ActualNTE, CountryName,TotalBudgetFPMIS, staff, team, ProjectSymbol)
```
```{r, echo=FALSE}
datatable(data.t, filter = "top")
```
```{r, echo=FALSE}
mapData <- data.table(map_data(map = "world"))
## Repair polygons that wrap around the world
getNewGroup = function(d){
n = nrow(d)
newGroup = d[1:(n-1), group] == d[2:n, group] &
abs(d[1:(n-1), long] - d[2:n, long]) > 180
## Don't switch right at the start
newGroup = c(FALSE, newGroup)
groupIndex = cumsum(newGroup)
## Each new group gets the old group number + 10,000 times the index
d[, group] + 10000 * groupIndex
}
mapData$long[mapData$long >= 210] = mapData$long[mapData$long >= 210] - 360
invisible(mapData[, newGroup := getNewGroup(.SD), by = region])
summTab <- data.o %>%
group_by(CountryName) %>%
dplyr::summarize(Activities = n())
summTab$region <- summTab$CountryName
summTab$region = gsub(",( Federal Democratic | Democratic | the | The | United | )Republic (o|O)f", "",
summTab$region)
summTab$region = gsub(" , Kingdom of", "", summTab$region)
missingCountries <- merge(mapData, summTab, by = "region", all.y = TRUE)
missingCountries <- missingCountries %>% filter(is.na(lat))
## Check which countries are missing if running line by line:
# missingCountries
## Alternative approach using countrycode package:
# temp$region = countrycode(temp$region, origin = "country.name",
#                           dest = "country.name", warn = TRUE)
# missingCountries <- merge(mapData, temp, by = "region", all.y = TRUE)
# missingCountries <- missingCountries %>% filter(is.na(lat))
# missingCountries
mapData <- merge(as.data.frame(mapData), summTab, by = "region", all.x = TRUE)
mapData <- mapData %>% arrange(order)
qplot(long, lat, fill = Activities, data = mapData, group = group,
geom ="polygon", ylab="", xlab="") +
scale_fill_continuous()
```
library(dplyr)
library(xlsx)
library(tidyr)
library(countrycode)
library(XLConnect)
sys <- Sys.info()
if(sys[7] == "josh"){
dir = "~/Documents/Github/EAR_pilot/"
} else if(sys[5] == "x86_64"){
dir = "~/Dropbox/FAO_ESS_STUFF/EAR_pilot" #Mac
data.dir = "~/Dropbox/FAO_ESS_STUFF/EAR_pilot_data/"
} else if (sys[5] == "Michael"){
dir = "C:/Users/Michael/Dropbox/FAO_ESS_STUFF/EAR_pilot"#HOME PC
data.dir = "C:/Users/Michael/Dropbox/FAO_ESS_STUFF/EAR_pilot_data/"
} else if (sys[6]=="Rahija") {
dir = "C:/Users/rahija/Dropbox/FAO_ESS_STUFF/EAR_pilot" #FAO PC
data.dir = "C:/Users/rahija/Dropbox/FAO_ESS_STUFF/EAR_pilot_data/"
} else {
stop("Implement location for current user!")
}
setwd(dir)
active <- read.csv(file = paste0(data.dir,"operationally_active_06_05_16.csv"),
stringsAsFactors = FALSE)
#FORMAT AND FILTERING
active <- select(active,
Actual.NTE,
Country.Name,
Geographical.Coverage,
LTO.Division,
Project.Classification,
Project.Staff...Funding.Officer,
Project.Staff...LTO.Officer,
Project.Staff...LTU.Officer,
Project.Status,
Project.Symbol,
Project.Title,
Region.Name..FAO.,
Total.Budget..DWH.,
Total.Budget..FPMIS.)
active$staff <- paste0(active$Project.Staff...Funding.Officer,
active$Project.Staff...LTO.Officer,
active$Project.Staff...LTU.Officer,
sep = ";")
active$staff <- gsub(";$", "",active$staff)
cols <- colnames(active)
cols <- gsub("\\.","",cols)
colnames(active) <- cols
library(dplyr)
library(xlsx)
library(tidyr)
library(countrycode)
library(XLConnect)
sys <- Sys.info()
if(sys[7] == "josh"){
dir = "~/Documents/Github/EAR_pilot/"
} else if(sys[5] == "x86_64"){
dir = "~/Dropbox/FAO_ESS_STUFF/EAR_pilot" #Mac
data.dir = "~/Dropbox/FAO_ESS_STUFF/EAR_pilot_data/"
} else if (sys[5] == "Michael"){
dir = "C:/Users/Michael/Dropbox/FAO_ESS_STUFF/EAR_pilot"#HOME PC
data.dir = "C:/Users/Michael/Dropbox/FAO_ESS_STUFF/EAR_pilot_data/"
} else if (sys[6]=="Rahija") {
dir = "C:/Users/rahija/Dropbox/FAO_ESS_STUFF/EAR_pilot" #FAO PC
data.dir = "C:/Users/rahija/Dropbox/FAO_ESS_STUFF/EAR_pilot_data/"
} else {
stop("Implement location for current user!")
}
setwd(dir)
active <- read.csv(file = paste0(data.dir,"operationally_active_06_05_16.csv"),
stringsAsFactors = FALSE)
#FORMAT AND FILTERING
active <- select(active,
Actual.NTE,
Country.Name,
Geographical.Coverage,
LTO.Division,
Project.Classification,
Project.Staff...Funding.Officer,
Project.Staff...LTO.Officer,
Project.Staff...LTU.Officer,
Project.Status,
Project.Symbol,
Project.Title,
Region.Name..FAO.,
Total.Budget..DWH.,
Total.Budget..FPMIS.)
active$staff <- paste0(active$Project.Staff...Funding.Officer,
active$Project.Staff...LTO.Officer,
active$Project.Staff...LTU.Officer,
sep = ";")
active$staff <- gsub(";$", "",active$staff)
cols <- colnames(active)
cols <- gsub("\\.","",cols)
colnames(active) <- cols
active
head(active)
active$ProjectTitle <- gsub("\\x82","",active$ProjectTitle)
active$ProjectTitle
active$ProjectTitle <- gsub("\\\x82","",active$ProjectTitle)
active$ProjectTitle
library(dplyr)
library(xlsx)
library(tidyr)
library(countrycode)
library(XLConnect)
sys <- Sys.info()
if(sys[7] == "josh"){
dir = "~/Documents/Github/EAR_pilot/"
} else if(sys[5] == "x86_64"){
dir = "~/Dropbox/FAO_ESS_STUFF/EAR_pilot" #Mac
data.dir = "~/Dropbox/FAO_ESS_STUFF/EAR_pilot_data/"
} else if (sys[5] == "Michael"){
dir = "C:/Users/Michael/Dropbox/FAO_ESS_STUFF/EAR_pilot"#HOME PC
data.dir = "C:/Users/Michael/Dropbox/FAO_ESS_STUFF/EAR_pilot_data/"
} else if (sys[6]=="Rahija") {
dir = "C:/Users/rahija/Dropbox/FAO_ESS_STUFF/EAR_pilot" #FAO PC
data.dir = "C:/Users/rahija/Dropbox/FAO_ESS_STUFF/EAR_pilot_data/"
} else {
stop("Implement location for current user!")
}
setwd(dir)
active <- read.csv(file = paste0(data.dir,"operationally_active_06_05_16.csv"),
stringsAsFactors = FALSE)
#FORMAT AND FILTERING
active <- select(active,
Actual.NTE,
Country.Name,
Geographical.Coverage,
LTO.Division,
Project.Classification,
Project.Staff...Funding.Officer,
Project.Staff...LTO.Officer,
Project.Staff...LTU.Officer,
Project.Status,
Project.Symbol,
Project.Title,
Region.Name..FAO.,
Total.Budget..DWH.,
Total.Budget..FPMIS.)
active$staff <- paste0(active$Project.Staff...Funding.Officer,
active$Project.Staff...LTO.Officer,
active$Project.Staff...LTU.Officer,
sep = ";")
active$staff <- gsub(";$", "",active$staff)
cols <- colnames(active)
cols <- gsub("\\.","",cols)
colnames(active) <- cols
active$ProjectTitle <- gsub("\\\x82","e",active$ProjectTitle)
active$ProjectTitle
active$ProjectTitle <- gsub("?","'",active$ProjectTitle)
active$ProjectTitle
library(dplyr)
library(xlsx)
library(tidyr)
library(countrycode)
library(XLConnect)
sys <- Sys.info()
if(sys[7] == "josh"){
dir = "~/Documents/Github/EAR_pilot/"
} else if(sys[5] == "x86_64"){
dir = "~/Dropbox/FAO_ESS_STUFF/EAR_pilot" #Mac
data.dir = "~/Dropbox/FAO_ESS_STUFF/EAR_pilot_data/"
} else if (sys[5] == "Michael"){
dir = "C:/Users/Michael/Dropbox/FAO_ESS_STUFF/EAR_pilot"#HOME PC
data.dir = "C:/Users/Michael/Dropbox/FAO_ESS_STUFF/EAR_pilot_data/"
} else if (sys[6]=="Rahija") {
dir = "C:/Users/rahija/Dropbox/FAO_ESS_STUFF/EAR_pilot" #FAO PC
data.dir = "C:/Users/rahija/Dropbox/FAO_ESS_STUFF/EAR_pilot_data/"
} else {
stop("Implement location for current user!")
}
setwd(dir)
active <- read.csv(file = paste0(data.dir,"operationally_active_06_05_16.csv"),
stringsAsFactors = FALSE)
#FORMAT AND FILTERING
active <- select(active,
Actual.NTE,
Country.Name,
Geographical.Coverage,
LTO.Division,
Project.Classification,
Project.Staff...Funding.Officer,
Project.Staff...LTO.Officer,
Project.Staff...LTU.Officer,
Project.Status,
Project.Symbol,
Project.Title,
Region.Name..FAO.,
Total.Budget..DWH.,
Total.Budget..FPMIS.)
active$staff <- paste0(active$Project.Staff...Funding.Officer,
active$Project.Staff...LTO.Officer,
active$Project.Staff...LTU.Officer,
sep = ";")
active$staff <- gsub(";$", "",active$staff)
cols <- colnames(active)
cols <- gsub("\\.","",cols)
colnames(active) <- cols
#clean up project names
active$ProjectTitle <- gsub("\\\x82","e",active$ProjectTitle)
active$ProjectTitle <- gsub("\\?","'",active$ProjectTitle)
active$ProjectTitle
active$ProjectTitle <- gsub("\\xfc\xbe\x8c\xa6\x84\xbc","o", active$ProjectTitle0
active$ProjectTitle <- gsub("\\xfc\xbe\x8c\xa6\x84\xbc","o", active$ProjectTitle)
active$ProjectTitle
test <- active$ProjectTitle[4]
test
gsub("\xfc\xbe\x8c\xa6\x84\xbc","o", test)
active$ProjectTitle <- gsub("\xfc\xbe\x8c\xa6\x84\xbc","o", active$ProjectTitle)
active$ProjectTitle
active$ProjectTitle <- gsub("\xfc\xbe\x8c\xb6\x84\xbc","u",active$ProjectTitle)
active$ProjectTitle
head(active)
source("R/addTeam.R")
test  <- addTeam(active)
head(test)
unique(active$team)
unique(test$team)
